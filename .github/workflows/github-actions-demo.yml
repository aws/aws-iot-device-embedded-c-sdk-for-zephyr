name: GitHub Actions Demo
on: [push]
jobs:
  build-check-zephyr:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Install Dependencies
        run: |
          sudo apt install --no-install-recommends git cmake ninja-build gperf \
          ccache dfu-util device-tree-compiler wget \
          python3-dev python3-pip python3-setuptools python3-tk python3-wheel xz-utils file \
          make gcc gcc-multilib g++-multilib libsdl2-dev
      - name: Verify Versions
        run: |
          cmake --version
          python3 --version
          dtc --version
      - name: Install West
        run: |
          pip3 install --user -U west
          echo 'export PATH=~/.local/bin:"$PATH"' >> ~/.bashrc
          source ~/.bashrc
      - name: Get Zephyr Source Code and Export Zephyr CMake
        run: |
          west init ~/zephyrproject
          cd ~/zephyrproject
          west update
          west zephyr-export
      - name: Install requirements.txt
        run: pip3 install --user -r ~/zephyrproject/zephyr/scripts/requirements.txt
      - name: Install Zephyr SDK
        run: |
          cd ~
          ls
          wget https://github.com/zephyrproject-rtos/sdk-ng/releases/download/v0.12.4/zephyr-sdk-0.12.4-x86_64-linux-setup.run
          chmod +x zephyr-sdk-0.12.4-x86_64-linux-setup.run
          ./zephyr-sdk-0.12.4-x86_64-linux-setup.run -- -d ~/zephyr-sdk-0.12.4
          sudo cp ~/zephyr-sdk-0.12.4/sysroots/x86_64-pokysdk-linux/usr/share/openocd/contrib/60-openocd.rules /etc/udev/rules.d
          sudo udevadm control --reload
      - name: Exploring file paths
        run: |
          cd ~
          ls
          cd ~/zephyrproject
          ls
          cd ~/work
          ls
          cd ~/work/aws-iot-device-embedded-c-sdk-for-zephyr
          ls
          cd ~/work/aws-iot-device-embedded-c-sdk-for-zephyr/aws-iot-device-embedded-c-sdk-for-zephyr
          ls
      - name: Install Espressif and Build Hello World
        run: |
          cd ~/zephyrproject
          west espressif install
          export ZEPHYR_TOOLCHAIN_VARIANT="espressif"
          export ESPRESSIF_TOOLCHAIN_PATH="${HOME}/.espressif/tools/xtensa-esp32-elf/esp-2020r3-8.4.0/xtensa-esp32-elf"
          export PATH=$PATH:$ESPRESSIF_TOOLCHAIN_PATH/bin
          west update
          west espressif update
          cd zephyr
          west build -b esp32 samples/hello_world
          west build -b esp32 ~/work/aws-iot-device-embedded-c-sdk-for-zephyr/aws-iot-device-embedded-c-sdk-for-zephyr/demos/mqtt/mqtt_plaintext --pristine -- -DBROKER_ENDPOINT="broker-endpoint" -DWIFI_NETWORK_SSID="wifi" -DWIFI_NETWORK_PASSWORD="password"
